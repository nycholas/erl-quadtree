%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et

%% == Erlang Compiler ==

{erl_opts, [
  warn_unused_vars,
  warn_export_all,
  warn_shadow_vars,
  warn_unused_import,
  warn_unused_function,
  warn_bif_clash,
  warn_unused_record,
  warn_deprecated_function,
  warn_obsolete_guard,
  warn_export_vars,
  warn_exported_vars,
  warn_missing_spec,
  warn_untyped_record,
  strict_validation,
  debug_info
]}.

%% == Dependencies ==

{deps, []}.

%% == EUnit ==

{eunit_opts, [verbose, {print_depth, 200}]}.
{eunit_tests, []}.
{eunit_compile_opts, [
  export_all,
  nowarn_untyped_record,
  nowarn_export_all
]}.

%% == Common Test ==

{ct_compile_opts, [
  warn_unused_vars,
  warn_export_all,
  warn_shadow_vars,
  warn_unused_import,
  warn_unused_function,
  warn_bif_clash,
  warn_unused_record,
  warn_deprecated_function,
  warn_obsolete_guard,
  warn_export_vars,
  warn_exported_vars,
  warn_missing_spec,
  warn_untyped_record,
  strict_validation,
  debug_info
]}.
{ct_first_files, []}.
{ct_opts, []}.

%% == Cover ==

{cover_enabled, true}.
{cover_opts, [verbose]}.

%% == Dialyzer ==

{dialyzer, [
  {warnings, [unmatched_returns, error_handling]},
  {get_warnings, true},
  {plt_apps, top_level_deps},
  {plt_extra_apps, []},
  {plt_location, local},
  {base_plt_apps, [kernel, stdlib]},
  {base_plt_location, global}
]}.

%% == xref ==

{xref_warnings, false}.
{xref_extra_paths, []}.
{xref_checks, [
  undefined_function_calls,
  undefined_functions,
  locals_not_used,
  exports_not_used,
  deprecated_function_calls,
  deprecated_functions
]}.
{xref_queries, []}.
{xref_ignores, [
  {quadtree, new, 1},
  {quadtree, new, 2},
  {quadtree, put, 2},
  {quadtree, query, 2}
]}.

%% == Alias ==

{alias, [
  {check, [xref, dialyzer]},
  {test, [eunit, ct, cover]}
]}.

%% == Shell ==

{shell, [
  {erl_opts, [
    debug_info
  ]},
  {apps, [sync]}
]}.

%% == Releases ==

{relx, [
  {release, {quadtree, "0.1.0"}, []},
  {dev_mode, true},
  {include_erts, false},
  {extended_start_script, true}
]}.

%% == Profiles ==

{profiles, [
  {prod, [
      {erl_opts, [
        no_debug_info
      ]},
      {relx, [
        {dev_mode, false},
        {debug_info, strip},
        {include_src, false},
        {include_erts, true}
      ]}
    ]},
    {dev, [
      {relx, [
        {dev_mode, false},
        {include_erts, true},
        {include_src, false}
      ]}
    ]},
  {shell, [
    {deps, [
      {sync, "0.2.0"}
    ]}
  ]},
  {test, [
    {deps, []},
    {erl_opts, [
      debug_info,
      verbose
    ]}
  ]}
]}.
